/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYER_DEFAULT 0
#define L_FN_A 1
#define L_NUM_BT 2

#define PALM(layer) &palm layer layer

/ {
        behaviors {
                palm: palm_hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "PALM_HOLD_TAP";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <300>;
                        bindings = <&mo &tog>;
                };

                mmt: my_mod_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "MY_MOD_TAP";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <100>;
                        quick-tap-ms = <200>;
                        bindings = <&kp &kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* QWERTY
 * +------+------+------+------+------+------+                            +------+------+------+------+------+------+
 * |  `   |  1   |  2   |  3   |  4   |  5   |       ------               |  6   |  7   |  8   |  9   |  0   |  -   |
 * +------+------+------+------+------+------+      (      )              +------+------+------+------+------+------+
 * |  ⇥   |  Q   |  W   |  E   |  R   |  T   |       ------               |  Y   |  U   |  I   |  O   |  P   |  =   |
 * +------+------+------+------+------+------+   ------                   +------+------+------+------+------+------+
 * | Caps |  A   |  S   |  D   |  F   |  G   |  ( Mute )                  |  H   |  J   |  K   |  L   |  ;   |  '   |
 * +------+------+------+------+------+------+   ------                   +------+------+------+------+------+------+
 * | Shift|  Z   |  X   |  C   |  V   |  B   |    +------+    +------+    |  N   |  M   |  ,   |  .   |  /   |  \   |
 * +------+------+------+------+------+------+    | ⌦/Alt|    | ⌫/Alt|    +------+------+------+------+------+------+
 * | Ctrl | Win  | Alt  |           +------+------+------+    +------+------+------+           | PtSc |  [   |  ]   |
 * +------+------+------+           |  L↓  | ␣/⇧  | ⇥/Ctl|    | ⏎/Ctl| ␣/⇧  |  L↑  |           +------+------+------+
 *                                  +------+------+------+    +------+------+------+
 *                      +------+                                                        +------+
 *                      |  L1  |                                                        |  L1  |
 *                      +------+                                                        +------+
 */
                        bindings = <
&kp GRAVE       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                                          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp MINUS
&kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T           &none                           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp EQUAL
&kp CAPS        &kp A           &kp S           &kp D           &kp F           &kp G           &kp C_MUTE                      &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp APOS
&kp LSHFT       &kp Z           &kp X           &kp C           &kp V           &kp B           &mmt LALT DEL   &mmt RALT BSPC  &kp N           &kp M           &kp COMMA       &kp PERIOD      &kp FSLH        &kp BSLH
&kp LCTRL       &kp LMETA       &kp LALT        PALM(L_FN_A)    &none           &mmt LSHFT SPACE &mmt LCTRL TAB &mmt RCTRL RET  &mmt RSHFT SPACE &none          PALM(L_FN_A)    &kp PSCRN       &kp LBKT        &kp RBKT
                        >;

                        sensor-bindings = <
                                &inc_dec_kp K_UNDO K_REDO
                                &inc_dec_kp C_VOL_UP C_VOL_DN
                                &inc_dec_kp UP DOWN
                                &inc_dec_kp LEFT RIGHT
                        >;
                };
                func_arrows_layer {
/* Esc, function row, and alternate arrow keys
 * +------+------+------+------+------+------+                            +------+------+------+------+------+------+
 * |  Esc |  F1  |  F2  |  F3  |  F4  |  F5  |       ------               |  F6  |  F7  |  F8  |  F9  |  F10 |  F11 |
 * +------+------+------+------+------+------+      (      )              +------+------+------+------+------+------+
 * |      | BT0  | BT1  | BT2  | PgUp | BTC  |       ------               |      | PgUp |      |      |      |  F12 |
 * +------+------+------+------+------+------+   ------                   +------+------+------+------+------+------+
 * |      | Home |  ←   |  ↑   |  →   | End  |  (      )                  | Home |  ←   |  ↑   |  →   |  End |      |
 * +------+------+------+------+------+------+   ------                   +------+------+------+------+------+------+
 * |      |      |      |  ↓   | PgDn | TOG  |    +------+    +------+    |      | PgDn |  ↓   |      |      |      |
 * +------+------+------+------+------+------+    |      |    |      |    +------+------+------+------+------+------+
 * |      |      |      |           +------+------+------+    +------+------+------+           |      |      |      |
 * +------+------+------+           |      |      |      |    |      |      |      |           +------+------+------+
 *                                  +------+------+------+    +------+------+------+
 *                      +------+                                                        +------+
 *                      |      |                                                        |      |
 *                      +------+                                                        +------+
 */
                        bindings = <
&kp ESC         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                                          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
&trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &kp PG_UP       &bt BT_CLR      &trans                          &none           &kp PG_UP       &none           &none           &none           &kp F12
&trans          &kp HOME        &kp LEFT        &kp UP          &kp RIGHT       &kp END         &trans                          &kp HOME        &kp LEFT        &kp UP          &kp RIGHT       &kp END         &none
&trans          &none           &none           &kp DOWN        &kp PG_DN       &out OUT_TOG    &trans          &trans          &none           &kp PG_DN       &kp DOWN        &none           &none           &none
&trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &none           &none
                        >;

                        sensor-bindings = <
                                /* Trans isn't supported for sensors; just redo the first two bindings */
                                &inc_dec_kp K_UNDO K_REDO
                                &inc_dec_kp C_VOL_UP C_VOL_DN
                                &inc_dec_kp PG_UP PG_DN
                                &inc_dec_kp BSPC DEL
                        >;
                };
        };
};

